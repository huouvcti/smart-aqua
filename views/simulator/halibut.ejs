<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">


    <script type="text/javascript" src="/views/simulator/script/halibut_function.js"></script>
    <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>

    <style>
        #nubbci_chart{
            width: 100%;
            height: 500px;
            border: 1px solid #000;
        }
    </style>

    <script>
        // 윤년 계산
        const leap_year = (y) => {
            if(y%4 == 0){
                if(y%400 != 0 && y%100 == 0){
                    return false
                }
                else{
                    return true
                }
            }
            else{
                return true
            }
        }

        // 날짜 변경 조정
        const date_set = (year, month, day) => {
            switch (month){
                case 1: case 3: case 5: case 7:
                case 8: case 10:
                    if(day > 31){
                        month++;
                        day = 1;
                    }
                    break;
                case 4: case 6: case 9: case 11:
                    if(day > 30){
                        month++;
                        day = 1;
                    }
                    break;
                case 12:
                    if(day > 31){
                        year++;
                        month = 1;
                        day = 1;
                    }
                    break;
                case 2:
                    if(leap_year(year)){ // 윤년
                        if(day > 29){
                            month++;
                            day = 1;
                        }
                    } else{
                        if(day > 28){
                            month++;
                            day = 1;
                        }
                    }
                    break;
                default:
                    break;
            }
            return [year, month, day];
        }
    </script>

    <script>
        const function_result = function(fun) {
            let Y = []      // 년
            let M = []      // 월
            let D = []      // 일
            let date = []

            let TF, OF, R   // 총마리수, 사료공급 설정, 기간

            let T = []      // 수온
            let W = []      // 개체중량 g
            let TGC = []    
            let FR = []     // 사료공급률 %
            let FV = []     // 총 사료공급량 kg
            let Wg = []     // 개체 증중량(전날대비) g
            let TWg = []    // 총 증중량(전날대비) kg
            let FCR = []    // 
            let Wgid = []
            let Wid = []

            let today = document.getElementsByName("today")[0].value;
            W[0] = parseFloat(document.getElementsByName("W_early")[0].value);
            TF = document.getElementsByName("TF")[0].value;
            OF = document.getElementsByName("OF")[0].value;
            

            if(fun === 'next'){
                document.getElementsByName("R")[0].value++
            } else if(fun == 'prev'){
                document.getElementsByName("R")[0].value--
            }
            R = document.getElementsByName("R")[0].value
            
            let content = document.getElementsByClassName("content")[0]


            let result = []


            result[0] = ['date', 'Wid']


            if(today != "" && TF != "" && OF != "" && R != ""){
                Y[0] = parseInt(today.split("-")[0]);
                M[0] = parseInt(today.split("-")[1]);
                D[0] = parseInt(today.split("-")[2]);


                for(let i=0; i<R; i++){
                    date = date_set(Y[i], M[i], D[i])
                    Y[i] = date[0]
                    M[i] = date[1]
                    D[i] = date[2]


                    if(i == 0){
                        Wg[i] = null
                        TWg[i] = null
                    } else {
                        W[i] = F_w(T[i-1], TGC[i-1], W[i-1])
                        Wg[i] = F_Wg(W[i], W[i-1])
                        TWg[i] = F_TWg(Wg[i], TF)
                    }

                    T[i] = F_T(M[i], R)             // temp (월간 수온)
                    TGC[i] = F_TGC(T[i], W[i])      // TGC

                    
                    FR[i] = F_FR(T[i], W[i])        // FR
                    FV[i] = F_FV(FR[i], W[i], TF)   // FV

                    if(i == 0){
                        FCR[i] = null
                        Wgid[i] = null
                        Wid[i] = null
                    } else {
                        FCR[i] = F_FCR(TF, Wg[i], FV[i])
                        Wgid[i] = F_Wgid(OF, FCR[i], TF)
                        if(i == 1){
                            Wid[i] = F_Wid(W[i-1], Wgid[i])
                        } else{
                            Wid[i] = F_Wid(Wid[i-1], Wgid[i])
                        }
                    }

                    console.log(Y[i], M[i], D[i], Wid[i]);

                    result[i+1] = [new Date(Y[i], M[i]-1, D[i]), Wid[i]]

                    Y[i+1] = Y[i]
                    M[i+1] = M[i]
                    D[i+1] = D[i] + 1
                }
            } else {
                alert("값을 입력해주세요")
            }

            
            console.log(result);

            return result;
        }
    </script>


    <script type="text/javascript">
        google.charts.load('current', {'packages':['corechart']});
        
        function drawChart(fun) {
            let growth = function_result(fun);
            var data = google.visualization.arrayToDataTable(growth);

            var options = {
                width: '90%',
                height: '90%',
                title: '개체 중증량 (FCR 적용)',
                hAxis: {
                    title: 'Year',
                    format: 'yyyy-MM-dd'
                },
            }

            var chart = new google.visualization.LineChart(document.getElementById('nubbci_chart'));

            chart.draw(data, options);
            window.addEventListener('resize', drawChart, false)
        }
    </script>


    <link rel="shortcut icon" href="#">
    <title>main page</title>


    <style>
        body{
            background: #1e90ff;
            width: 1500px;
            margin: 0px auto;
        }
        #title{
            position: relative;
            display: inline-block;
            top: 40px;
            width: 100%;
            text-align: center;
            font-size: 270%;

            color: #fff;
            text-align: center;
        }

        img{
            position: absolute;
            display: inline-block; 
            cursor: pointer;
            transition: 10s;
        }

        img:active{
            opacity: 0;
        }

        #halibut{
            z-index: -1;
            width: 30%;
            top: 0;
            left: 20px;
            transform: rotate(10deg);
        }

        #seaweeds{
            z-index: -1;
            width: 15%;
            bottom: 30px;
            right: 60px;
            transform: rotate(40deg);
        }

        #loginBtn{
            position: absolute;
            display: inline-block;
            top: 100px;
            width: 1400px;
            text-align:right;
            font-size: 100%;
            text-decoration: none;
            color: #fff;
        }
        #loginBtn:hover{
            font-size: 120%;
            color: #fff; 
            /* background-color: #fff; */
            text-shadow: 0px 0px 5px #1e90ff; 
        }


        #main_contents{
            width: 95%;
            padding: 2.5%;
            margin: 30px auto 50px auto;
            box-shadow: 0px 0px 20px gray;
            border-radius: 10px;
            background-color: #fff;

            display: grid;
            
            grid-template-columns: 1fr;
            grid-template-rows: 130px 1000px;
            row-gap: 30px;
        }

        #early{
            margin: auto;
            width: 100%;
            height: 100%;
            box-sizing: border-box;
            border: 1px solid #aaa;
            display: grid;
            grid-template-columns: 1fr 1fr 1fr 1fr;
            grid-template-rows: 1fr;
        }

        fieldset legend{
            font-size: 20px;
            font-weight: bold;
            color: #000
        }

        #early div{
            box-sizing: border-box;
            margin: 10px;
            width: 95%;
            height: 95%;
            margin: auto;
            display: grid;
            grid-template-columns: 1fr 1fr;
            text-align: center;
        }

        #early div label{
            margin: auto;
        }


        #early_temper_label{
            width: 70%;
            padding: 10%;
            border-radius: 10px;
            color: #fff;
            font-weight: bold;
            box-shadow: 0px 0px 10px #ccc;
            background-color: #aaa;
            cursor: pointer;

            transition: 0.3s;
        }
        #early_temper_label:hover{
            scale: 1.05;
        }


        #early div input[type=number]{
            margin: auto 0;
            padding: 10px;
            width: 50%;
            height: 30px;
        }

        #early #early_setBtn{
            display: grid;
            grid-template-columns: 1fr;
            text-align: center;
        }

        #early #early_setBtn button{
            margin: auto;
            width: 60%;
            padding: 5%;
            font-weight: bold;
            font-size: 1.2em;
            border-radius: 10px;
            color: #fff;
            box-shadow: 0px 0px 10px #ccc;
            transition: 0.3s;
            border: none;
            background-color: #1e90ff;
            cursor: pointer;
        }



        #result{
            margin: auto;
            width: 100%;
            height: 100%;
            box-sizing: border-box;
            border: 1px solid #aaa;
            display: grid;
            grid-template-columns: 70% 30%;
            grid-template-rows: 1fr;
        }

        #result div{

        }

        #result #chart_wrap{
            margin: auto;
            width: 100%;
            height: 100%;
            text-align: center;
            display: grid;
            grid-template-columns: 1fr 1fr;
            grid-template-rows: 1fr 1fr;
        }

        #result #chart_wrap .chart_wrap{
            margin: 5%;
            width: 90%;
            height: 90%;
            display: grid;
            grid-template-columns: 1fr;
            grid-template-rows: 5% 95%;
        }

        #result #chart_wrap .chart_wrap p{
            margin: 0;
            font-size: 1.3em;
        }

        #result #chart_wrap .chart_wrap .chart{
            border: 1px solid #aaa;
            margin: 5%;
        }





        #result-set{
            border-left: 2px solid #aaa;
            padding: 5%;
            display: grid;
            grid-template-columns: 1fr;
            grid-template-rows: 40% 55%;
            row-gap: 5%;
        }

        .chart{
            box-sizing: border-box;
            padding-top: 10%;
            padding-right: 10%;
            margin: 0;
        }


        #result-set .chart_wrap{
            display: grid;
            grid-template-columns: 1fr;
            grid-template-rows: 10% 90%;
        }

        #result-set .chart_wrap p{
            margin: 0;
            text-align: center;
            font-size: 1.3em;
        }

        #result-set .chart_wrap .chart{
            border: 1px solid #aaa;
        }

        #next-setting{
            border: 1px solid #aaa;
            text-align: center;
            display: grid;
            grid-template-columns: 1fr;
            grid-template-rows: 1fr 1fr 1fr;
        }

        #next-setting #next-label{
            width: 100%;
            margin: auto;
            font-size: 1.3em;
        }

        #next-setting #next{
            text-align: center;
            width: 70%;
            margin: auto;
            padding: 10%;
            font-size: 1.3em;
        }

        #next-setting button{
            margin: auto;
            width: 90%;
            
            padding: 10%;
            border: none;
            border-radius: 10px;
            color: #fff;
            font-size: 1.5em;
            font-weight: bold;
            box-shadow: 0px 0px 10px #aaa;
            background-color: #aaa;
            cursor: pointer;
            transition: 0.3s;
        }

        #next-setting button:hover{
            background-color: #1e90ff;
            scale: 1.05;
        }







        /* #result{
            display: grid;
            grid-template-columns: 2fr 1fr;
            
        } */

        /* #nubbci_chart{
            width: 90%;
            height: 90%;
            margin: auto;
        }

        #predi{
            display: grid;
            grid-template-columns: 1fr;
            grid-template-rows: 1fr 1fr 1fr;
            border-left: 3px solid #ccc;

        }

        #predi div{
            width: 90%;
            height: 90%;
            margin: auto;
            margin-left: 0;
            display: grid;
            grid-template-columns: 1fr 1fr;
            grid-template-rows: 1fr;
        }

        #predi div p{
            width: 80%;
            text-align: center;
            display: inline-block;
            padding: 20% 5%;
            margin: auto;
            color: #000;
        }

        #predi div p.predi_value{
            border: 1px solid #000;
            background-color: #fff;
            color: #000;
        }
        #btn-wrap{
            border-top: 3px solid #ccc;
            text-align: center;

            display: grid;
            grid-template-columns: 1fr 1fr 1fr;
            grid-template-rows: 1fr;
        }
        #btn_set{
            display: grid;
            grid-template-columns: 1fr 1fr;
            grid-template-rows: 1fr;
        }
        #btn-wrap button{
            border: none;
            cursor: pointer;
        }
        #btn_start, #btn_reset{
            margin: auto;
            width: 70%;
            padding: 10%;
            border-radius: 10px;
            color: #fff;
            box-shadow: 0px 0px 10px #ccc;
            transition: 0.3s;
        }
        #btn_start{
            background-color: #0087F2;
        }
        #btn_reset{
            background-color: #FF0358;
        }

        #btn_start:hover, #btn_reset:hover{
            transform: scale(1.1);
        }


        #btn_R{
            border-left: 2px solid #ccc;
            border-right: 2px solid #ccc;
            height: 40%;
            margin: 5vh 0;
            display: grid;
            grid-template-columns: 2fr 1fr 1fr;
            grid-template-rows: 1fr;
        }
        #btn_R select{
            margin: auto;
            width: 70%;
            padding: 5%;
        }
        #btn_R button{
            margin: auto;
            width: 65px;
            height: 65px;
            padding: 7%;
            font-size: large;
            color: #ccc;
            background-color: #fff;
            border-radius: 50%;
            border: 3px solid #ccc;
            transition: 0.3s;
        }
        #btn_R button:hover{
            color: #fff;
            background-color: #ccc;

        }

        

        
        #start_setting{
            position: fixed;
            background: rgba(0, 128, 255, 0.7);
            top:0;
            right: 0;
            width: 100%;
            height: 100%;
            z-index: 100;
            display: none;
        }
        #start_setting_container{
            position: relative;
            background-color: #fff;
            border: 1px solid gray;
            box-shadow: 0px 0px 5px gray;
            width: 50vh;
            height: 40vh;
            margin: 20vh auto auto auto;
            padding: 30px 30px 50px 30px;
            cursor: auto;
        }
        #start_setting_container #start_setting_close{
            position: absolute;
            top: 0;
            right: 15px;
            display: block;
            color: gray;
            font-size: 2.5em;
            z-index: 102;
            cursor: pointer;
        }

        #start_setting_container h2{
            margin: 0;
            text-align: center;
        }
        #start_setting_container table{
            margin-top: 10%;
            width: 100%;
            height: 90%;
        }
        #start_setting_container table input[type=date]{
            margin-left: 20%;
        }
        #start_setting_container table input[type=number]{
            width: 75%;
            margin-left: 20%;
        }
        #start_setting_container table button{
            width: 100%;
            background-color: #0087F2;
            padding: 2% 5%;
            border: none;
            border-radius: 10px;
            color: #fff;
            box-shadow: 0px 0px 10px #ccc;
            cursor: pointer;
        } */
    </style>

    <script src="https://code.jquery.com/jquery-1.9.1.min.js"></script>


    <!-- High chart -->
    <script src="http://code.highcharts.com/highcharts.js"></script>
    <script src="https://code.highcharts.com/modules/series-label.js"></script>
    <script src="https://code.highcharts.com/modules/exporting.js"></script>
    <script src="https://code.highcharts.com/modules/export-data.js"></script>
    <script src="https://code.highcharts.com/modules/accessibility.js"></script>

    <!-- 엑셀 파일 읽기 -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.15.5/xlsx.full.min.js"></script>


    <script>
        $(document).ready(function() {
            $.ajax ({
                type:'GET',
                dataType:'json',
                url:`/simulator/halibut/show/all`,
                success : function(result){
                    // if(result.legnth == 0){
                    //     // 아무것도 없을 때  
                    // }
                    if(result[0]['Temp'] != null){
                        // 날짜와 수온까지 입력했을 때
                        draw_Temp(result);
                    }
                    if(result[0]['TF'] != null){
                        // 초기 중량, 총 마리 수까지 입력했을 때
                    } 
                    if(result[0]['OF'] != null){
                        // 모든 값을 입력했을 때
                    }
                },
                error : function(err) {
                    console.log(err)
                }
            });

		});
    </script>



</head>
<body>
    <h1 id="title">넙치 성장 예측 프로그램</h1>
    
<!--
    <div id="main_contents">
        <a href="/simulator/logout" id="loginBtn">로그아웃</a>
        <div id="result">
            <div id="nubbci_chart"></div>
            <div id="predi">
                <div>
                    <p>권장 사료량</p>
                    <p class="predi_value">1</p>
                </div>
                <div>
                    <p>예측 성장률</p>
                    <p class="predi_value">2</p>
                </div>
                <div>
                    <p>폐사율</p>
                    <p class="predi_value">3</p>
                </div>
            </div>
        </div>
        
        <div id="btn-wrap">
            <div id="btn_set">
                <button id="btn_start">초기값 설정</button>
                <button id="btn_reset">리셋</button>
            </div>
            <div id="btn_R">
                <select name="R_change">
                    <option value="day">일</option>
                    <option value="week">주 (7일)</option>
                    <option value="month">월 (30일)</option>
                </select>
                <button onclick="drawChart('prev')"><</button>
                <button onclick="drawChart('next')">></button>
            </div>
            <div>
                
            </div>
            
        </div>
        
    </div>
-->






    <div id="main_contents">

        
        <fieldset id="early">
            <legend>초기값 설정</legend>
            <div>
                <label for="early_temper" id="early_temper_label">기간별 수온<br>(파일 업로드)</label>
                <input type="file" id="early_temper" onchange="readExcel()" style="display:none;">
                <label>(파일명)</label>
            </div>
            <div>
                <label for="early_TF">총 마리수: </label>
                <input type="number" id="early_TF">
            </div>
            <div>
                <label for="early_W">개체중량(g): </label>
                <input type="number" id="early_W">
            </div>
            <div id="early_setBtn">
                <button onClick="early_set()">설정하기</button>
            </div>
        </fieldset>


        <fieldset id="result">
            <legend>시뮬레이터</legend>
            <div id="chart_wrap">
                <div class="chart_wrap">
                    <p><개체 중량></p>
                    <div class="chart"></div>
                </div>

                <div class="chart_wrap">
                    <p><총 중량></p>
                    <div class="chart"></div>
                </div>

                <div class="chart_wrap">
                    <p><권장 사료량></p>
                    <div class="chart"></div>
                </div>

                <div class="chart_wrap">
                    <p><폐사율></p>
                    <div class="chart"></div>
                </div>
            </div>



            <div id="result-set">
                <div class="chart_wrap">
                    <p><수온></p>
                    <div class="chart" id="chart_Temp"></div>
                </div>

                <div id="next-setting">
                    <label for="next" id="next-label">사료 공급 하기</label>
                    <input type="number" id="next">
                    <button>다음날</button>
                </div>
                
            </div>
        </fieldset>

        
    </div>














    <img src="../public/halibut.png" id="halibut">
    <img src="../public/seaweed.png" id="seaweeds">



    <script>
        const chart_draw = function(chart, chart_name, unit, line_color, render, chart_data){
            return new Highcharts.Chart({
                chart: {
                    renderTo: render,
                    defaultSeriesType: 'spline',
                },
                title: {
                    text: '    '
                },
                xAxis:{
                    categories: "",
                    visible: false
                },
                yAxis: {
                    minPadding: 0.2,
                    maxPadding: 0.2,
                    title: {
                        text: unit,
                    }
                },
                tooltip:{
                    formatter: this.x,
                    valueSuffix: unit,
                },
                credits: {
                    enabled: false
                },
                series: [{
                    animation: true,
                    name: chart_name,
                    data: chart_data,
                    color : line_color
                }]
            });
        }

        
        

        Highcharts.setOptions({
            global: {
                useUTC: false
            }
        });

        let chart_temp



        const draw_Temp = (result) => {
            let Temp_data = [];

            for(let i=0; i<result.length; i++){
                let data = result[i]['Temp'];
                Temp_data.push(data);
            }

            chart_temp = chart_draw(chart_Temp, '수온', '°C', '#00f', 'chart_Temp', Temp_data);
        }
    </script>




    <!-- 엑셀 업로드 후 수온 그래프 그리기 -->
    <script>
        function readExcel() {
            let input = event.target;
            let reader = new FileReader();
            reader.onload = function () {
                let data = reader.result;
                let workBook = XLSX.read(data, { type: 'binary' });
                workBook.SheetNames.forEach(function (sheetName) {
                    console.log('SheetName: ' + sheetName);
                    
                    let temper_json = XLSX.utils.sheet_to_json(workBook.Sheets[sheetName]);
                    console.log(temper_json)
                    
                    $.ajax ({
                        type:'POST',
                        dataType:'json',
                        data: {json: JSON.stringify(temper_json)},
                        url:`/simulator/halibut/set/temp`,
                        success : function(result){
                            alert("파일 업로드 성공")
                            console.log(result);

                            draw_Temp(result);
                        },
                        error : function(err) {
                            console.log(err)
                        }
                    });
                })

                
            };
            reader.readAsBinaryString(input.files[0]);
        }
    </script>


    <!-- 초기 중량, 총 마리수 입력 시 그래프 업데이트 -->
    <script>
        function early_set(){
            const early_TF = document.getElementById("early_TF").value
            const early_W = document.getElementById("early_W").value
            
            if(chart_temp == undefined){
                alert("기간별 수온 파일을 먼저 업로드 해주세요.")
            } else if(early_TF == "" || early_W == ""){
                alert("총 마리수와 초기 중량 값을 입력해주세요")
            } else{
                $.ajax ({
                    type:'POST',
                    dataType:'json',
                    data: {TF: early_TF, early_W: early_W},
                    url:`/simulator/halibut/set/TF`,
                    success : function(result){
                        alert("완료");
                        console.log(result);
                    },
                    error : function(err) {
                        console.log(err)
                    }
                });
            }
            
        }
    </script>
    

    <script>
        window.addEventListener("DOMContentLoaded", event => {
            const btn_start = document.getElementById("btn_start");
            const start_setting = document.getElementById("start_setting");
            const start_setting_close = document.getElementById("start_setting_close");

            document.addEventListener("click", event => {
                if(event.target == btn_start){
                    start_setting.style.display = "block";
                }
                if (event.target == start_setting_close) {
                    start_setting.style.display = "none";
                    
                }
            })
        })
    </script>

    

</body>
</html>





<!-- <div id="start_setting">
    <div id="start_setting_container">
        <h2>초기값 설정</h2>
        <span id="start_setting_close">&times;</span>
        <table>
            <tr>
                <td>TODAY</td>
                <td><input type="date" name="today"></td>
            </tr>
            <tr>
                <td>기간</td>
                <td><input type="number" name="R"></td>
            </tr>
            <tr>
                <td>개체 중량 초기값</td>
                <td><input type="number" name="W_early"></td>
            </tr>
            <tr>
                <td>총 마리 수</td>
                <td><input type="number" name="TF"></td>
            </tr>
            <tr>
                <td>사료 공급 설정</td>
                <td><input type="number" name="OF"></td>
            </tr>
            <tr>
                <td colspan="2">
                    <button onclick="drawChart()">실행</button>
                </td>
            </tr>
            
        </table>
        
    </div>
    
</div> -->



<!-- 


    // let Temp_data = [];

    // for(let i=0; i<result.length; i++){
    //     let data = result[i]['Temp'];
    //     Temp_data.push(data);
    // }

    // chart_temp = chart_draw(chart_Temp, '수온', '°C', '#00f', 'chart_Temp', Temp_data);




// chart_Temp = new Highcharts.Chart({
    //     chart: {
    //         renderTo: 'chart_Temp',
    //         defaultSeriesType: 'spline',
    //     },
    //     title: {
    //         text: '    '
    //     },
    //     xAxis:{
    //         categories: "",
    //         visible: false
    //     },
    //     yAxis: {
    //         minPadding: 0.2,
    //         maxPadding: 0.2,
    //         title: {
    //             text: '°C',
    //         }
    //     },
    //     tooltip:{
    //         formatter: this.x,
    //         valueSuffix: '°C',
    //     },
    //     credits: {
    //         enabled: false
    //     },
    //     series: [{
    //         animation: true,
    //         name: '수온',
    //         data: Temp_data,
    //         color : '#F00'
    //     }]
    // });

     -->